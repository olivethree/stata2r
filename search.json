[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cookbook Data Analysis with Stata and R",
    "section": "",
    "text": "This is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\ncat(\" This is a test again\")\n\n This is a test again"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "getting_started.html",
    "href": "getting_started.html",
    "title": "2  Getting Started",
    "section": "",
    "text": "This chapter provides a quick tutorial on how to install and set up R and Stata on both Windows and Mac computers. By the end of this chapter, you’ll have the necessary tools ready to begin your analysis."
  },
  {
    "objectID": "getting_started.html#installing-r",
    "href": "getting_started.html#installing-r",
    "title": "2  Getting Started",
    "section": "2.2 Installing R",
    "text": "2.2 Installing R\n\n2.2.1 Windows\n\nDownload R:\n\nGo to the R Project website.\nClick on “Download R for Windows.”\nClick on “base” to download the base R package.\n\nInstall R:\n\nRun the downloaded .exe file.\nFollow the installation instructions, accepting the default settings.\n\nInstall RStudio (Optional but recommended):\n\nDownload RStudio from the RStudio website.\nRun the installer and follow the setup instructions.\n\n\n\n\n2.2.2 Mac\n\nDownload R:\n\nVisit the R Project website.\nClick on “Download R for macOS.”\n\nInstall R:\n\nOpen the downloaded .pkg file.\nFollow the installation instructions.\n\nInstall RStudio (Optional but recommended):\n\nDownload RStudio from the RStudio website.\nOpen the .dmg file and drag RStudio to your Applications folder."
  },
  {
    "objectID": "getting_started.html#installing-stata",
    "href": "getting_started.html#installing-stata",
    "title": "2  Getting Started",
    "section": "2.3 Installing Stata",
    "text": "2.3 Installing Stata\n\n2.3.1 Windows\n\nObtain a License:\n\nStata is commercial software. Ensure you have a valid license.\n\nDownload Stata:\n\nGo to the Stata website and log in to your account to download the installer.\n\nInstall Stata:\n\nRun the downloaded .exe file.\nFollow the installation instructions, entering your license information when prompted.\n\n\n\n\n2.3.2 Mac\n\nObtain a License:\n\nMake sure you have a valid license for Stata.\n\nDownload Stata:\n\nVisit the Stata website and log in to your account to download the installer.\n\nInstall Stata:\n\nOpen the downloaded .dmg file.\nDrag the Stata application to your Applications folder.\nLaunch Stata and enter your license information."
  },
  {
    "objectID": "getting_started.html#setting-up-your-environment",
    "href": "getting_started.html#setting-up-your-environment",
    "title": "2  Getting Started",
    "section": "2.4 Setting Up Your Environment",
    "text": "2.4 Setting Up Your Environment\n\n2.4.1 R Setup\n\nOpen RStudio (or R GUI if not using RStudio).\nInstall Essential Packages:\n\nOpen the Console and run:\n\n\n\n   install.packages(c(\"tidyverse\", \"lme4\", \"ggplot2\"))\n\n\nCreate a New Project (Optional but recommended in RStudio):\n\nGo to “File” > “New Project” > “New Directory” > “New Project.”\nChoose a location and name for your project, then click “Create Project.”\n\n\n\n\n2.4.2 Stata Setup\n\nOpen Stata.\nSet a Working Directory:\n\nUse the command:\n\n\n   cd \"path/to/your/directory\"\n\nReplace \"path/to/your/directory\" with the path where you want to save your files.\nCreating Do-Files:\n\nGo to “File” > “New Do-file Editor.”\nSave the Do-file in your working directory."
  },
  {
    "objectID": "getting_started.html#verification",
    "href": "getting_started.html#verification",
    "title": "2  Getting Started",
    "section": "2.5 Verification",
    "text": "2.5 Verification\n\n2.5.1 R\n\nTest Installation:\n\nIn RStudio or R GUI, type:\n\n\n   print(\"R is working!\")\n\n\nIf you see the output [1] \"R is working!\", your installation is successful.\n\nLoad a Package:\n\nRun:\n\n\n   library(ggplot2)\n   print(\"ggplot2 is loaded!\")\n\n\n\n\n2.5.2 Stata\n\nTest Installation:\n\nIn the Command window, type:\n\n\n   display \"Stata is working!\"\n\n\nIf you see the output Stata is working!, your installation is successful.\n\nCheck Version:\n\nType:\n\n\n   about\n\n\nThis will display the version of Stata installed.\n\n\n\nWith your environment set up, you’re now ready to start performing analyses using R and Stata!"
  },
  {
    "objectID": "ANOVA.html",
    "href": "ANOVA.html",
    "title": "3  ANOVA",
    "section": "",
    "text": "This chapter covers ANOVA (Analysis of Variance), used to compare the means across multiple groups. We will use an example dataset to investigate whether the design of a user interface (UI) affects the time users spend on a website."
  },
  {
    "objectID": "ANOVA.html#example-question",
    "href": "ANOVA.html#example-question",
    "title": "3  ANOVA",
    "section": "3.2 Example Question",
    "text": "3.2 Example Question\nDoes the design of a user interface (UI) influence the time users spend on a website?"
  },
  {
    "objectID": "ANOVA.html#required-packages-r",
    "href": "ANOVA.html#required-packages-r",
    "title": "3  ANOVA",
    "section": "3.3 Required Packages (R)",
    "text": "3.3 Required Packages (R)\n\n# Load the necessary packages \nlibrary(tidyverse) # used for data manipulation and visualization\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(car) # provides tools for ANOVA and regression diagnostics\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n# to install any missing packages go to the Terminal and run the command: install.packages(\"PACKAGE_NAME\")"
  },
  {
    "objectID": "ANOVA.html#simulating-the-dataset-in-r",
    "href": "ANOVA.html#simulating-the-dataset-in-r",
    "title": "3  ANOVA",
    "section": "3.4 Simulating the Dataset in R",
    "text": "3.4 Simulating the Dataset in R\n\n# Setting a seed for reproducibility\nset.seed(123)\n\n# Simulating data\nn_groups <- 3  # Number of UI designs\nn_per_group <- 50  # Number of users per group\n\n# Creating a factor variable for UI design\nui_design <- factor(rep(1:n_groups, each = n_per_group))\n\n# Simulating time spent data with different means for each UI design\ntime_spent <- rnorm(n_groups * n_per_group, mean = rep(c(20, 25, 22), each = n_per_group), sd = 5)\n\n# Creating a data frame\ndata <- data.frame(ui_design, time_spent)\n\n# Viewing the first few rows of the dataset\nhead(data)\n\n  ui_design time_spent\n1         1   17.19762\n2         1   18.84911\n3         1   27.79354\n4         1   20.35254\n5         1   20.64644\n6         1   28.57532"
  },
  {
    "objectID": "ANOVA.html#simulating-the-dataset-in-stata",
    "href": "ANOVA.html#simulating-the-dataset-in-stata",
    "title": "3  ANOVA",
    "section": "3.5 Simulating the Dataset in Stata",
    "text": "3.5 Simulating the Dataset in Stata\n\n* Set seed for reproducibility\nset seed 123\n\n* Simulate data\nset obs 150\ngen ui_design = ceil(_n/50)\ngen time_spent = rnormal(20 + (ui_design==2)*5 + (ui_design==3)*2, 5)\n\n* View the first few rows\nlist in 1/10"
  },
  {
    "objectID": "ANOVA.html#visualizing-the-descriptives-in-r",
    "href": "ANOVA.html#visualizing-the-descriptives-in-r",
    "title": "3  ANOVA",
    "section": "3.6 Visualizing the Descriptives in R",
    "text": "3.6 Visualizing the Descriptives in R\n\n# Plotting the distribution of time spent across different UI designs\nggplot(data, aes(x = ui_design, y = time_spent)) +\n  geom_boxplot() +\n  labs(title = \"Time Spent on Website by UI Design\",\n       x = \"UI Design\",\n       y = \"Time Spent (minutes)\")"
  },
  {
    "objectID": "ANOVA.html#visualizing-the-descriptives-in-stata",
    "href": "ANOVA.html#visualizing-the-descriptives-in-stata",
    "title": "3  ANOVA",
    "section": "3.7 Visualizing the Descriptives in Stata",
    "text": "3.7 Visualizing the Descriptives in Stata\n\n* Box plot of time spent by UI design\ngraph box time_spent, over(ui_design) title(\"Time Spent on Website by UI Design\") ///\n    ytitle(\"Time Spent (minutes)\") xtitle(\"UI Design\")"
  },
  {
    "objectID": "ANOVA.html#running-the-anova-in-r",
    "href": "ANOVA.html#running-the-anova-in-r",
    "title": "3  ANOVA",
    "section": "3.8 Running the ANOVA in R",
    "text": "3.8 Running the ANOVA in R\n\n# Performing ANOVA\nanova_model <- aov(time_spent ~ ui_design, data = data)\n\n# Viewing the summary of the ANOVA model\nsummary(anova_model)\n\n             Df Sum Sq Mean Sq F value   Pr(>F)    \nui_design     2    937   468.7   21.18 8.29e-09 ***\nResiduals   147   3253    22.1                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "ANOVA.html#running-the-anova-in-stata",
    "href": "ANOVA.html#running-the-anova-in-stata",
    "title": "3  ANOVA",
    "section": "3.9 Running the ANOVA in Stata",
    "text": "3.9 Running the ANOVA in Stata\n\n* Perform ANOVA\nanova time_spent ui_design"
  },
  {
    "objectID": "ANOVA.html#interpreting-the-output",
    "href": "ANOVA.html#interpreting-the-output",
    "title": "3  ANOVA",
    "section": "3.10 Interpreting the Output",
    "text": "3.10 Interpreting the Output\n\n3.10.1 In R\nThe ANOVA table provides the following key pieces of information: - Df: Degrees of freedom associated with the sources of variance. - Sum Sq: Sum of squares, which measures the total variation for each source. - Mean Sq: Mean square, calculated as Sum Sq divided by Df. - F value: The F-statistic, calculated as the ratio of mean square values. - Pr(>F): The p-value associated with the F-statistic.\n\n\n3.10.2 In Stata\nThe output of the ANOVA in Stata provides similar information: - Source: Lists the sources of variance. - Partial SS: Partial sum of squares for each source. - df: Degrees of freedom associated with each source. - MS: Mean square for each source, calculated as SS/df. - F: The F-statistic for each source. - Prob > F: The p-value associated with the F-statistic.\nIf the p-value is less than the significance level (typically 0.05), we reject the null hypothesis that all group means are equal."
  },
  {
    "objectID": "ANOVA.html#post-hoc-testing-in-r",
    "href": "ANOVA.html#post-hoc-testing-in-r",
    "title": "3  ANOVA",
    "section": "3.11 Post-hoc Testing in R",
    "text": "3.11 Post-hoc Testing in R\n\n# Performing Tukey's Honest Significant Difference test\ntukey_test <- TukeyHSD(anova_model)\n\n# Viewing the Tukey test results\ntukey_test\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = time_spent ~ ui_design, data = data)\n\n$ui_design\n          diff       lwr       upr     p adj\n2-1  5.5600236  3.332272  7.787775 0.0000001\n3-1  0.5584801 -1.669271  2.786231 0.8237890\n3-2 -5.0015435 -7.229295 -2.773792 0.0000012"
  },
  {
    "objectID": "ANOVA.html#post-hoc-testing-in-stata",
    "href": "ANOVA.html#post-hoc-testing-in-stata",
    "title": "3  ANOVA",
    "section": "3.12 Post-hoc Testing in Stata",
    "text": "3.12 Post-hoc Testing in Stata\n\n* Perform Bonferroni post-hoc test\noneway time_spent ui_design, bonferroni"
  },
  {
    "objectID": "ANOVA.html#plotting-the-results-in-r",
    "href": "ANOVA.html#plotting-the-results-in-r",
    "title": "3  ANOVA",
    "section": "3.13 Plotting the Results in R",
    "text": "3.13 Plotting the Results in R\n\n# Plotting the results of the Tukey HSD test\nplot(tukey_test, las = 1)\n\n\n\n# Creating a plot to visualize group means with confidence intervals\nggplot(data, aes(x = ui_design, y = time_spent)) +\n  stat_summary(fun.data = mean_cl_normal, geom = \"errorbar\", width = 0.2) +\n  stat_summary(fun = mean, geom = \"point\", size = 3) +\n  labs(title = \"Mean Time Spent on Website by UI Design\",\n       x = \"UI Design\",\n       y = \"Mean Time Spent (minutes)\") +\n  theme_minimal()"
  },
  {
    "objectID": "ANOVA.html#plotting-the-results-in-stata",
    "href": "ANOVA.html#plotting-the-results-in-stata",
    "title": "3  ANOVA",
    "section": "3.14 Plotting the Results in Stata",
    "text": "3.14 Plotting the Results in Stata\n\n* Plot group means with confidence intervals\nmeans time_spent, over(ui_design) ci"
  },
  {
    "objectID": "ANOVA.html#assumptions",
    "href": "ANOVA.html#assumptions",
    "title": "3  ANOVA",
    "section": "3.15 Assumptions",
    "text": "3.15 Assumptions\n\nIndependence: Observations should be independent of each other.\nNormality: The residuals of the model should be normally distributed.\nHomoscedasticity: Variances across the groups should be equal.\nRandom Sampling: The data should be randomly sampled from the population.\n\nThese assumptions should be checked to ensure the validity of the ANOVA results."
  },
  {
    "objectID": "ANOVA.html#syntax-comparison-r-vs-stata",
    "href": "ANOVA.html#syntax-comparison-r-vs-stata",
    "title": "3  ANOVA",
    "section": "3.16 Syntax Comparison: R vs Stata",
    "text": "3.16 Syntax Comparison: R vs Stata\nThis table summarizes the main differences between R and Stata in terms of syntax for performing ANOVA analyses.\n\n\n\n\n\n\n\n\nTask\nR Command\nStata Command\n\n\n\n\nSimulating Data\nrnorm() for simulating normal distribution\nrnormal() for simulating normal distribution\n\n\nSetting Seed for Reproducibility\nset.seed(123)\nset seed 123\n\n\nCreating a Factor Variable\nfactor()\ngen variable and egen group\n\n\nVisualizing Descriptives\nggplot() with geom_boxplot()\ngraph box\n\n\nRunning ANOVA\naov() and summary()\nanova\n\n\nPost-hoc Testing\nTukeyHSD()\noneway with bonferroni option\n\n\nPlotting Group Means with Confidence Intervals\nggplot() with stat_summary()\nmeans with ci option"
  },
  {
    "objectID": "linear_regression.html",
    "href": "linear_regression.html",
    "title": "4  Linear Regression",
    "section": "",
    "text": "This chapter covers how to perform linear regression to study the relationship between variables. We’ll use an example dataset that simulates the relationship between study time and performance on an online learning platform."
  },
  {
    "objectID": "linear_regression.html#example-question",
    "href": "linear_regression.html#example-question",
    "title": "4  Linear Regression",
    "section": "4.2 Example Question",
    "text": "4.2 Example Question\nHow does the amount of time spent on an e-learning platform (in hours) affect the test scores of users?"
  },
  {
    "objectID": "linear_regression.html#dataset-simulation-in-r",
    "href": "linear_regression.html#dataset-simulation-in-r",
    "title": "4  Linear Regression",
    "section": "4.3 Dataset Simulation in R",
    "text": "4.3 Dataset Simulation in R\n\n# Load necessary package\nset.seed(123)\n\n# Simulate data\nn <- 100\nstudy_time <- rnorm(n, mean = 10, sd = 2)  # Average 10 hours\ntest_score <- 50 + 5 * study_time + rnorm(n, mean = 0, sd = 5)  # Linear relationship with some noise\n\n# Create a data frame\ndata <- data.frame(study_time, test_score)\n\n# View the first few rows\nhead(data)"
  },
  {
    "objectID": "linear_regression.html#dataset-simulation-in-stata",
    "href": "linear_regression.html#dataset-simulation-in-stata",
    "title": "4  Linear Regression",
    "section": "4.4 Dataset Simulation in Stata",
    "text": "4.4 Dataset Simulation in Stata\n\n* Set seed for reproducibility\nset seed 123\n\n* Simulate data\nset obs 100\ngen study_time = rnormal(10, 2)\ngen test_score = 50 + 5 * study_time + rnormal(0, 5)\n\n* View the first few rows\nlist in 1/10"
  },
  {
    "objectID": "linear_regression.html#performing-linear-regression",
    "href": "linear_regression.html#performing-linear-regression",
    "title": "4  Linear Regression",
    "section": "4.5 Performing Linear Regression",
    "text": "4.5 Performing Linear Regression\n\n4.5.1 R\n\n# Fit the linear regression model\nmodel <- lm(test_score ~ study_time, data = data)\n\n# View the summary\nsummary(model)\n\n\n\n4.5.2 Stata\n\n* Fit the linear regression model\nregress test_score study_time"
  },
  {
    "objectID": "linear_regression.html#assumptions",
    "href": "linear_regression.html#assumptions",
    "title": "4  Linear Regression",
    "section": "4.6 Assumptions",
    "text": "4.6 Assumptions\n\nLinearity: The relationship between the independent and dependent variable should be linear.\nIndependence: Observations should be independent of each other.\nHomoscedasticity: The residuals should have constant variance at every level of the independent variable.\nNormality: The residuals should be normally distributed."
  },
  {
    "objectID": "multilevel_regression.html",
    "href": "multilevel_regression.html",
    "title": "5  Multilevel Regression",
    "section": "",
    "text": "This chapter covers multilevel regression, where data is nested. We will explore how user satisfaction with a mobile app is affected by time spent on the app, considering that users are nested within different age groups."
  },
  {
    "objectID": "multilevel_regression.html#example-question",
    "href": "multilevel_regression.html#example-question",
    "title": "5  Multilevel Regression",
    "section": "5.2 Example Question",
    "text": "5.2 Example Question\nDoes time spent on a mobile app influence user satisfaction, and does this effect differ across age groups?"
  },
  {
    "objectID": "multilevel_regression.html#dataset-simulation-in-r",
    "href": "multilevel_regression.html#dataset-simulation-in-r",
    "title": "5  Multilevel Regression",
    "section": "5.3 Dataset Simulation in R",
    "text": "5.3 Dataset Simulation in R\n\n# Load necessary package\nset.seed(123)\n\n# Simulate data\nn_groups <- 5  # Number of age groups\nn_per_group <- 50  # Number of users per group\n\nage_group <- factor(rep(1:n_groups, each = n_per_group))\ntime_spent <- rnorm(n_groups * n_per_group, mean = 30, sd = 10)\nsatisfaction <- 3 + 0.2 * time_spent + as.numeric(age_group) + rnorm(n_groups * n_per_group, sd = 2)\n\n# Create a data frame\ndata <- data.frame(age_group, time_spent, satisfaction)\n\n# View the first few rows\nhead(data)"
  },
  {
    "objectID": "multilevel_regression.html#dataset-simulation-in-stata",
    "href": "multilevel_regression.html#dataset-simulation-in-stata",
    "title": "5  Multilevel Regression",
    "section": "5.4 Dataset Simulation in Stata",
    "text": "5.4 Dataset Simulation in Stata\n\n* Set seed for reproducibility\nset seed 123\n\n* Simulate data\nset obs 250\ngen group = ceil(_n/50)  // Age group\ngen time_spent = rnormal(30, 10)\ngen satisfaction = 3 + 0.2 * time_spent + group + rnormal(0, 2)\n\n* Convert group to a factor\negen group_factor = group(group)\n\n* View the first few rows\nlist in 1/10"
  },
  {
    "objectID": "multilevel_regression.html#performing-multilevel-regression",
    "href": "multilevel_regression.html#performing-multilevel-regression",
    "title": "5  Multilevel Regression",
    "section": "5.5 Performing Multilevel Regression",
    "text": "5.5 Performing Multilevel Regression\n\n5.5.1 R\n\n# Load necessary package\nlibrary(lme4)\n\n# Fit the multilevel model\nmodel <- lmer(satisfaction ~ time_spent + (1 | age_group), data = data)\n\n# View the summary\nsummary(model)\n\n\n\n5.5.2 Stata\n\n* Fit the multilevel model\nmixed satisfaction time_spent || group:"
  },
  {
    "objectID": "multilevel_regression.html#assumptions",
    "href": "multilevel_regression.html#assumptions",
    "title": "5  Multilevel Regression",
    "section": "5.6 Assumptions",
    "text": "5.6 Assumptions\n\nNormality of residuals: The residuals at each level of the model should be normally distributed.\nLinearity: The relationship between predictors and the outcome should be linear at each level of the model.\nIndependence: Observations within each group should be independent.\nHomoscedasticity: The variance of residuals should be consistent across all levels of the hierarchy."
  },
  {
    "objectID": "log_regression.html",
    "href": "log_regression.html",
    "title": "6  Logistic Regression",
    "section": "",
    "text": "This chapter covers logistic regression, which is used when the outcome variable is binary. We will use an example dataset to investigate whether the frequency of technical support contact predicts whether a user continues to use a software product."
  },
  {
    "objectID": "log_regression.html#example-question",
    "href": "log_regression.html#example-question",
    "title": "6  Logistic Regression",
    "section": "6.2 Example Question",
    "text": "6.2 Example Question\nDoes the frequency of contacting technical support predict whether a user will continue using a software product?"
  },
  {
    "objectID": "log_regression.html#required-packages-r",
    "href": "log_regression.html#required-packages-r",
    "title": "6  Logistic Regression",
    "section": "6.3 Required Packages (R)",
    "text": "6.3 Required Packages (R)\n\n# Load the necessary packages \nlibrary(tidyverse) # used for data manipulation and visualization\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(broom) # for tidying the model output, making it easier to work with\n\n# to install any missing packages go to the Terminal and run the command: install.packages(\"PACKAGE_NAME\")"
  },
  {
    "objectID": "log_regression.html#simulating-the-dataset-in-r",
    "href": "log_regression.html#simulating-the-dataset-in-r",
    "title": "6  Logistic Regression",
    "section": "6.4 Simulating the Dataset in R",
    "text": "6.4 Simulating the Dataset in R\n\n# Setting a seed for reproducibility\nset.seed(123)\n\n# Simulating data\nn <- 200\nsupport_contact <- rpois(n, lambda = 2)  # Number of contacts with support\ncontinued_use <- rbinom(n, size = 1, prob = 1 / (1 + exp(-(-1 + 0.5 * support_contact))))\n\n# Creating a data frame\ndata <- data.frame(support_contact, continued_use)\n\n# Viewing the first few rows of the dataset\nhead(data)\n\n  support_contact continued_use\n1               1             0\n2               3             0\n3               2             1\n4               4             1\n5               4             1\n6               0             1"
  },
  {
    "objectID": "log_regression.html#simulating-the-dataset-in-stata",
    "href": "log_regression.html#simulating-the-dataset-in-stata",
    "title": "6  Logistic Regression",
    "section": "6.5 Simulating the Dataset in Stata",
    "text": "6.5 Simulating the Dataset in Stata\n\n* Set seed for reproducibility\nset seed 123\n\n* Simulate data\nset obs 200\ngen support_contact = rpoisson(2)\ngen continued_use = rbinomial(1, 1 / (1 + exp(-(-1 + 0.5 * support_contact))))\n\n* View the first few rows\nlist in 1/10"
  },
  {
    "objectID": "log_regression.html#visualizing-the-descriptives-in-r",
    "href": "log_regression.html#visualizing-the-descriptives-in-r",
    "title": "6  Logistic Regression",
    "section": "6.6 Visualizing the Descriptives in R",
    "text": "6.6 Visualizing the Descriptives in R\n\n# Plotting the distribution of support contacts for users who continued vs those who didn't\nggplot(data, aes(x = factor(continued_use), y = support_contact)) +\n  geom_boxplot() +\n  labs(title = \"Support Contacts vs Continued Use\",\n       x = \"Continued Use (0 = No, 1 = Yes)\",\n       y = \"Number of Support Contacts\")"
  },
  {
    "objectID": "log_regression.html#visualizing-the-descriptives-in-stata",
    "href": "log_regression.html#visualizing-the-descriptives-in-stata",
    "title": "6  Logistic Regression",
    "section": "6.7 Visualizing the Descriptives in Stata",
    "text": "6.7 Visualizing the Descriptives in Stata\n\n* Box plot of support contacts by continued use\ngraph box support_contact, over(continued_use) title(\"Support Contacts vs Continued Use\") ///\n    ytitle(\"Number of Support Contacts\") xtitle(\"Continued Use (0 = No, 1 = Yes)\")"
  },
  {
    "objectID": "log_regression.html#running-the-logistic-regression-in-r",
    "href": "log_regression.html#running-the-logistic-regression-in-r",
    "title": "6  Logistic Regression",
    "section": "6.8 Running the Logistic Regression in R",
    "text": "6.8 Running the Logistic Regression in R\n\n# Fitting the logistic regression model\nlogistic_model <- glm(continued_use ~ support_contact, data = data, family = \"binomial\")\n\n# Viewing the summary of the logistic regression model\nsummary(logistic_model)\n\n\nCall:\nglm(formula = continued_use ~ support_contact, family = \"binomial\", \n    data = data)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.2697  -0.9883   0.5643   1.0621   1.7118  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)      -1.2023     0.3046  -3.947 7.90e-05 ***\nsupport_contact   0.7398     0.1453   5.092 3.54e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 274.83  on 199  degrees of freedom\nResidual deviance: 240.15  on 198  degrees of freedom\nAIC: 244.15\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "log_regression.html#running-the-logistic-regression-in-stata",
    "href": "log_regression.html#running-the-logistic-regression-in-stata",
    "title": "6  Logistic Regression",
    "section": "6.9 Running the Logistic Regression in Stata",
    "text": "6.9 Running the Logistic Regression in Stata\n\n* Fit the logistic regression model\nlogit continued_use support_contact"
  },
  {
    "objectID": "log_regression.html#interpreting-the-output",
    "href": "log_regression.html#interpreting-the-output",
    "title": "6  Logistic Regression",
    "section": "6.10 Interpreting the Output",
    "text": "6.10 Interpreting the Output\n\n6.10.1 In R\nThe summary of the logistic regression model provides the following key pieces of information: - Coefficients: Estimates of the regression coefficients. - Std. Error: Standard errors of the coefficients. - z value: The test statistic for each coefficient. - Pr(>|z|): The p-value associated with each coefficient, indicating whether it is statistically significant.\n\n\n6.10.2 In Stata\nThe output of the logistic regression in Stata provides similar information: - Coef.: Estimates of the regression coefficients. - Std. Err.: Standard errors of the coefficients. - z: The test statistic for each coefficient. - P>|z|: The p-value associated with each coefficient, indicating whether it is statistically significant.\nIf the p-value is less than the significance level (typically 0.05), we reject the null hypothesis that the coefficient is equal to zero."
  },
  {
    "objectID": "log_regression.html#plotting-the-results-in-r",
    "href": "log_regression.html#plotting-the-results-in-r",
    "title": "6  Logistic Regression",
    "section": "6.11 Plotting the Results in R",
    "text": "6.11 Plotting the Results in R\n\n# Plotting the logistic regression curve\nggplot(data, aes(x = support_contact, y = continued_use)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), se = FALSE) +\n  labs(title = \"Logistic Regression: Probability of Continued Use\",\n       x = \"Number of Support Contacts\",\n       y = \"Probability of Continued Use\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "log_regression.html#plotting-the-results-in-stata",
    "href": "log_regression.html#plotting-the-results-in-stata",
    "title": "6  Logistic Regression",
    "section": "6.12 Plotting the Results in Stata",
    "text": "6.12 Plotting the Results in Stata\n\n* Create logistic regression plot (approximation)\ntwoway (scatter continued_use support_contact) (lfit continued_use support_contact, ci)"
  },
  {
    "objectID": "log_regression.html#assumptions",
    "href": "log_regression.html#assumptions",
    "title": "6  Logistic Regression",
    "section": "6.13 Assumptions",
    "text": "6.13 Assumptions\n\n6.13.1 In R and Stata\n\nBinary Outcome: The dependent variable should be binary.\nIndependence: Observations should be independent of each other.\nLinearity of logit: The logit (log-odds) of the outcome should be linearly related to the predictors.\nNo multicollinearity: The predictors should not be highly correlated with each other.\nLarge sample size: Logistic regression typically requires a large sample size to provide reliable estimates.\n\nThese assumptions should be checked to ensure the validity of the logistic regression results."
  },
  {
    "objectID": "log_regression.html#syntax-comparison-r-vs-stata",
    "href": "log_regression.html#syntax-comparison-r-vs-stata",
    "title": "6  Logistic Regression",
    "section": "6.14 Syntax Comparison: R vs Stata",
    "text": "6.14 Syntax Comparison: R vs Stata\nThis table summarizes the main differences between R and Stata in terms of syntax for performing Logistic Regression analysis.\n\n\n\n\n\n\n\n\nTask\nR Command\nStata Command\n\n\n\n\nSimulating Data\nrpois(), rbinom()\nrpoisson(), rbinomial()\n\n\nSetting Seed for Reproducibility\nset.seed(123)\nset seed 123\n\n\nVisualizing Descriptives\nggplot() with geom_boxplot()\ngraph box\n\n\nRunning Logistic Regression\nglm() with family = \"binomial\"\nlogit\n\n\nPlotting the Results\nggplot() with geom_smooth(method = \"glm\", ...)\ntwoway scatter and lfit"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "7  Summary",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]